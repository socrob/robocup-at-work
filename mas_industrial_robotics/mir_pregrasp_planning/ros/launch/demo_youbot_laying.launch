<?xml version="1.0"?>
<!-- Note: this is a demo launch file for the youBot.-->
<launch>
  <!-- The following nodes are excluded from the group since they use move_group
      from MoveIt!, which remaps the 'move_group' namespace to the group's namespace -->
  <node pkg="mcr_manipulation_pose_selector" type="reachability_pose_selector_trigger_node"
          name="pregrasp_pipeline_pose_selector" output="screen">

    <!-- the node cycle rate (in hz) -->
    <param name="loop_rate" type="double" value="10.0"/>

    <!-- MoveIt! node name -->
    <param name="move_group" type="str" value="move_group"/>

    <!-- Arm name to be used for giving commands-->
    <param name="arm" type="str" value="arm_1"/>

    <rosparam param="linear_offset">
        - 0.00
        - 0.00
        - 0.00
    </rosparam>

    <remap from="~goal_pose_array"
           to="/mir_manipulation/pregrasp_planner_pipeline/pose_generator/poses_list"/>
  </node>

  <node pkg="mcr_arm_motions" type="planned_motion_node"
          name="move_arm_planned_motion" output="screen">

    <!-- the cycle rate of the node (in hz) -->
    <param name="~loop_rate"  type="double" value="10.0"/>

    <param name="~move_group"  type="string" value="move_group"/>
    <param name="~arm"  type="string" value="arm_1"/>

    <remap from="~target_configuration"
           to="/pregrasp_pipeline_pose_selector/joint_configuration"/>
  </node>

  <group ns="mir_manipulation/pregrasp_planner_pipeline">
    <node pkg="mcr_manipulation_measurers" type="pose_transformer_node"
              name="pose_transformer" output="screen">

      <!-- the cycle rate of the node (in Hz) -->
      <param name="loop_rate" type="double" value="10.0"/>

      <param name="wait_for_transform" type="double" value="0.1"/>

      <!-- Reference frame to transform target pose -->
      <param name="target_frame" type="str" value="base_link"/>

      <!-- Flag to use node in trigger mode -->
      <param name="trigger" type="boolean" value="false"/>

      <!-- Pose in (geometry_msgs/PoseStamped) -->
      <remap from="~pose_in" to="/mir_states/object_selector/object_pose" />
    </node>

    <node pkg="mir_pregrasp_planning" type="simple_pregrasp_planner_node"
            name="grasp_planner" output="screen">

      <!-- the node cycle rate (in hz) -->
      <param name="loop_rate" type="double" value="10.0"/>

      <!-- the tolerance to decide whether an object should be re-oriented,
          based on its height (in meters) -->
      <param name="height_tolerance" type="double" value="0.04"/>

      <!-- Rotation offset to add to the reference_axis of the pose (in degrees) -->
      <param name="rotation_offset" type="double" value="0"/>

      <!-- Range of rotation allowed [0 - rotation_range] (in degrees). -->
      <rosparam param="rotation_range">
          - 270
          - 90
      </rosparam>

      <!-- These params can be used to add an offset to the target pose
      (e.g. to move the arm close to a target, but not the target itself) -->
      <!-- Closest distance the gripper should be to the object (in meters) -->
      <param name="min_distance_to_object" type="double" value="-0.01"/>
      <!-- Furthest distance the gripper should be to the object (in meters) -->
      <param name="max_distance_to_object" type="double" value="-0.01"/>

      <!-- Azimuth (in degrees) -->
      <param name="min_azimuth" type="double" value="-3.0"/>
      <param name="max_azimuth" type="double" value="3.0"/>

      <!-- Zenith (in degrees) -->
      <param name="min_zenith" type="double" value="-3.0"/>
      <param name="max_zenith" type="double" value="3.0"/>

      <!-- Wrist roll (in degrees) -->
      <param name="min_roll" type="double" value="0.0"/>
      <param name="max_roll" type="double" value="0.0"/>

      <!-- Angular tolerance to check if an object is standing up (in degrees) -->
      <param name="angular_tolerance" type="double" value="10.0"/>

      <remap from="~pose_in" to="pose_transformer/transformed_pose"/>
      <remap from="~grasp_type" to="/mir_manipulation/pregrasp_planner_pipeline/grasp_type"/>
    </node>

    <node pkg="mcr_pose_generation" type="pose_generator_node"
            name="pose_generator" output="screen">

      <rosparam command="load"
                file="$(find mir_pregrasp_planning)/ros/config/gripper_configuration_matrix.yaml" />

      <!-- the cycle rate of the node (in hz) -->
      <param name="loop_rate"  type="double" value="10.0"/>

      <!-- the sampling step for linear variables (in meters) -->
      <param name="linear_step" type="double" value="0.01"/>

      <!-- the sampling step for angular variables (in degrees) -->
      <param name="angular_step" type="double" value="0.5"/>

      <!-- the configuration matrix of the gripper to be used -->
      <param name="gripper_config_matrix" type="str" value="youbot_dynamixel_gripper"/>

      <remap from="~target_pose"
             to="/mir_manipulation/pregrasp_planner_pipeline/grasp_planner/pose_out"/>
      <remap from="~sampling_parameters"
             to="/mir_manipulation/pregrasp_planner_pipeline/grasp_planner/sampling_parameters"/>
    </node>

    <node pkg="mir_pregrasp_planning" type="pregrasp_planner_pipeline_node"
            name="coordinator" output="screen">

      <!-- the node cycle rate (in hz) -->
      <param name="loop_rate" type="double" value="30.0"/>

      <remap from="~event_in" to="/mir_manipulation/pregrasp_planner_pipeline/event_in"/>
      <remap from="~event_out" to="/mir_manipulation/pregrasp_planner_pipeline/event_out"/>

      <!-- To trigger components -->
      <remap from="~start_pose_transformer" to="pose_transformer/event_in"/>
      <remap from="~start_pregrasp_planner"
             to="/mir_manipulation/pregrasp_planner_pipeline/grasp_planner/event_in"/>
      <remap from="~start_pose_generator"
             to="/mir_manipulation/pregrasp_planner_pipeline/pose_generator/event_in"/>
      <remap from="~start_pose_selector"
             to="/pregrasp_pipeline_pose_selector/event_in"/>

      <!-- To get feedback from components -->
      <remap from="~pose_transformer_status" to="pose_transformer/event_out"/>
      <remap from="~pregrasp_planner_status"
             to="/mir_manipulation/pregrasp_planner_pipeline/grasp_planner/event_out"/>
      <remap from="~pose_generator_status"
             to="/mir_manipulation/pregrasp_planner_pipeline/pose_generator/event_out"/>
      <remap from="~pose_selector_status"
             to="/pregrasp_pipeline_pose_selector/event_out"/>
    </node>
  </group>

  <group ns="mir_manipulation/move_arm_planned">
    <node pkg="mcr_topic_tools" type="brics_joints_to_joint_states_node"
            name="topic_transformer">
      <!-- the cycle rate of the node (in Hz) -->
      <param name="loop_rate" type="double" value="10.0"/>

      <remap from="~configuration_in"
             to="/pregrasp_pipeline_pose_selector/joint_configuration"/>
      <remap from="~configuration_out"
             to="/mir_manipulation/move_arm_planned/joint_position_monitor/configuration"/>
    </node>

    <node pkg="mcr_manipulation_monitors" type="joint_position_monitors_node"
            name="joint_position_monitor" output="screen">
      <remap from="~joint_states" to="/joint_states"/>

      <!-- the cycle rate of the node (in Hz) -->
      <param name="loop_rate" value="10.0"/>

      <!-- tolerance for the joint positions -->
      <param name="epsilon" value="0.08"/>

      <!-- a list of the joint names to check -->
      <rosparam param="target_joint_names">
          - 'arm_joint_1'
          - 'arm_joint_2'
          - 'arm_joint_3'
          - 'arm_joint_4'
          - 'arm_joint_5'
      </rosparam>

      <remap from="~joint_states" to="/joint_states"/>
    </node>

    <node pkg="mcr_arm_motions" type="planned_motion_with_feedback_node"
            name="coordinator" output="screen">

      <!-- the node cycle rate (in hz) -->
      <param name="loop_rate" type="double" value="30.0"/>

      <remap from="~event_in" to="/mir_manipulation/move_arm_planned/event_in"/>
      <remap from="~event_out" to="/mir_manipulation/move_arm_planned/event_out"/>

      <!-- To trigger components -->
      <remap from="~start_planned_motion" to="/move_arm_planned_motion/event_in"/>
      <remap from="~start_monitor"
             to="/mir_manipulation/move_arm_planned/joint_position_monitor/event_in"/>

      <!-- To get feedback from components -->
      <remap from="~monitor_status"
             to="/mir_manipulation/move_arm_planned/joint_position_monitor/event_out"/>
    </node>
  </group>
</launch>
